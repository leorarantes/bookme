// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Professional {
  id     Int     @id @default(autoincrement())
  name   String  @unique

  services  Service[]
  @@map("professional")
}

model Client {
  id     Int     @id @default(autoincrement())
  name   String
  phone  String
  email  String  @unique

  books  Book[]
  @@map("client")
}

model Service {
  id              String              @unique
  duration        Int
  price           Decimal             @db.Decimal(10, 2)
  nameId          Int
  descriptionId   Int
  professionalId  Int
  createdAt       DateTime            @default(now())

  name            ServiceName         @relation(fields: [nameId], references: [id])
  description     ServiceDescription  @relation(fields: [descriptionId], references: [id])
  professional    Professional        @relation(fields: [professionalId], references: [id])

  books                   Book[]
  servicesAvailabilities  ServiceAvailability[]
  @@map("service")
}

model ServiceName {
  id     Int     @id @default(autoincrement())
  name   String  @unique

  services  Service[]
  @@map("serviceName")
}

model ServiceDescription {
  id           Int     @id @default(autoincrement())
  description  String  @unique

  services  Service[]
  @@map("serviceDescription")
}

model Book {
  id         Int        @id @default(autoincrement())
  protocol   String     @unique
  date       String
  serviceId  String
  clientId   Int
  createdAt  DateTime   @default(now())
  deletedAt  DateTime?

  service    Service    @relation(fields: [serviceId], references: [id])
  client     Client     @relation(fields: [clientId], references: [id])
  
  @@map("book")
}

model Availability {
  id            Int  @id @default(autoincrement())
  dayOfTheWeek  Int
  startHour     Int
  startMinute   Int
  duration      Int

  servicesAvailabilities  ServiceAvailability[]
  @@map("availability")
}

model ServiceAvailability {
  id              Int           @id @default(autoincrement())
  serviceId       String        @unique
  availabilityId  Int

  service         Service       @relation(fields: [serviceId], references: [id])
  availability    Availability  @relation(fields: [availabilityId], references: [id])
  @@map("serviceAvailability")
}